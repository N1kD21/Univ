version: '3.8'

services:
  binfmt:
    image: tonistiigi/binfmt
    privileged: true
    command: --install all
    restart: "no"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: -js
    networks:
      - app-network
    volumes:
      - nats_data:/data
    restart: unless-stopped

  gateway:
    build:
      context: ./gateway
    environment:
      - NATS_SERVER=${NATS_SERVER}
    ports:
      - "3000"
    depends_on:
      - nats
    networks:
      - app-network
    restart: unless-stopped

  reporter:
    build:
      context: ./reporter
    depends_on:
      - nats
    networks:
      - app-network
    ports:
      - "6000:6000"
    restart: unless-stopped

  publisher:
    image: andriiuni/events:latest
    platform: linux/arm64
    environment:
      - EVENT_ENDPOINT=${EVENT_ENDPOINT}
    depends_on:
      - gateway
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=universe_user
      - POSTGRES_PASSWORD=universe_Q2w3E4z%12
      - POSTGRES_DB=universeDB
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  fb-collector:
    build:
      context: ./fb-collector
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - app-network
    ports:
      - "4000:4000"
    restart: unless-stopped

  ttk-collector:
    build:
      context: ./ttk-collector
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - app-network
    ports:
      - "5000:5000"
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - gateway
    networks:
      - app-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - gateway
      - fb-collector
      - ttk-collector
      - reporter
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  nats_data:
  grafana_data:
  prometheus_data:
